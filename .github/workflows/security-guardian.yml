name: Security Guardian
on:
  pull_request_target:
    types:
      - edited
      - opened
      - synchronize
      - reopened

  # Triggered from a separate job when a review is added
  workflow_run:
    workflows: [PR Linter Trigger]
    types:
      - completed

  # Trigger when a status is updated (CodeBuild leads to statuses)
  status: {}

  # Trigger when a check suite is completed (GitHub actions and CodeCov create checks)
  check_suite:
    types: [completed]

jobs:
  download-if-workflow-run:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.pr_output.outputs.pr_number }}
      pr_sha: ${{ steps.pr_output.outputs.pr_sha }}
    # if conditions on all individual steps because subsequent jobs depend on this job
    # and we cannot skip it entirely
    steps:
      - name: 'Download workflow_run artifact'
        if: github.event_name == 'workflow_run'
        uses: dawidd6/action-download-artifact@v9
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: pr_info
          path: pr/
          search_artifacts: true

      - name: 'Determine PR info'
        # PR info comes from the artifact if downloaded, or GitHub context if not.
        if: github.event_name == 'workflow_run'
        id: 'pr_output'
        run: |
          if [[ ! -f pr/pr_number ]]; then
            echo "${{ github.event.pull_request.number }}" > pr/pr_number
          fi
          if [[ ! -f pr/pr_sha ]]; then
            echo "${{ github.event.pull_request.head.sha }}" > pr/pr_sha
          fi
          cat pr/*
          echo "pr_number=$(cat pr/pr_number)" >> "$GITHUB_OUTPUT"
          echo "pr_sha=$(cat pr/pr_sha)" >> "$GITHUB_OUTPUT"

  validate-pr:
    # Necessary to have sufficient permissions to write to the PR
    permissions:
      contents: read
      pull-requests: write
      statuses: read
      issues: read
      checks: read
    runs-on: ubuntu-latest
    needs: download-if-workflow-run
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get list of changed .template.json files
        id: filter_files
        run: |
          echo "Getting changed CloudFormation templates..."
          mkdir -p changed_templates

          git fetch origin main --depth=1

          base_sha="${{ github.event.pull_request.base.sha }}"
          head_sha="${{ github.event.pull_request.head.sha }}"
          if [[ -z "$base_sha" ]]; then base_sha=$(git merge-base origin/main HEAD); fi
          if [[ -z "$head_sha" ]]; then head_sha=HEAD; fi

          git diff --name-status "$base_sha" "$head_sha" \
            | grep -E '^(A|M)\s+.*\.template\.json$' \
            | awk '{print $2}' > changed_files.txt || true

          while IFS= read -r file; do
            if [ -f "$file" ]; then
              safe_name=$(echo "$file" | sed 's|/|_|g')
              cp "$file" "changed_templates/$safe_name"
            else
              echo "::warning::Changed file not found in workspace: $file"
            fi
          done < changed_files.txt

          if [ -s changed_files.txt ]; then
            echo "files_changed=true" >> $GITHUB_OUTPUT
          else
            echo "files_changed=false" >> $GITHUB_OUTPUT
          fi
  
      - name: Install cfn-guard
        if: steps.filter_files.outputs.files_changed == 'true'
        run: |
          mkdir -p $HOME/.local/bin
          curl -L -o cfn-guard.tar.gz https://github.com/aws-cloudformation/cloudformation-guard/releases/latest/download/cfn-guard-v3-x86_64-ubuntu-latest.tar.gz
          tar -xzf cfn-guard.tar.gz
          mv cfn-guard-v3-*/cfn-guard $HOME/.local/bin/cfn-guard
          chmod +x $HOME/.local/bin/cfn-guard
          echo "$HOME/.local/bin" >> $GITHUB_PATH
  
      - name: Install & Build security-guardian
        if: steps.filter_files.outputs.files_changed == 'true'
        run: yarn install --frozen-lockfile && cd tools/@aws-cdk/security-guardian && yarn build

      - name: Run cfn-guard if templates changed
        if: steps.filter_files.outputs.files_changed == 'true'
        uses: ./tools/@aws-cdk/security-guardian
        with:
          data_directory: './changed_templates'
          rule_set_path: './tools/@aws-cdk/security-guardian/rules/trust_scope_rules.guard'
          show_summary: 'fail'
          output_format: 'single-line-summary'
